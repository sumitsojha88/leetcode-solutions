


Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
Example 2:

Input: nums = [1]
Output: 1
Example 3:

Input: nums = [0]
Output: 0
Example 4:

Input: nums = [-1]
Output: -1
Example 5:

Input: nums = [-100000]
Output: -100000




class Solution {
public:
    int maxSubArray(vector<int>& nums) {
      
            
            int n=nums.size();
            int dp[n];
            dp[0] = nums[0];
            int maxsum= dp[0];
            for(int i=1;i<n;i++)
            {
                    dp[i] = max(nums[i],dp[i-1]+nums[i]);
                    
                    if(dp[i]>maxsum)
                            maxsum = dp[i];
            }
            
            
            
            
        return maxsum;
    }
};
