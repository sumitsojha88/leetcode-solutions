class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
            
            map<int,int> map;
   vector<int> ans;
   for(int i=0;i<nums.size();i++)
   {
       int diff = target - nums[i];
       if(map.find(diff)!=map.end())
       {
           ans.push_back(map[diff]);
           ans.push_back(i);
           return ans;
       }
       
           map[nums[i]] = i;
   }
   
   return ans;
       /* vector<int> v;
            unordered_map<int,int> mp;
            
            for(int i=0;i<nums.size();i++)
            {

            mp[nums[i]]=i;  
            }
            for(int i=0;i<nums.size();i++)
            {
            if(mp.find(target-nums[i])!=mp.end() && mp.find(target-nums[i])->second !=i)
            {
                       v.push_back(i);
                    v.push_back(mp.find(target-nums[i])->second);
                break;
            }
            }
      return v; */
    }
};
 /* for (int i = 0; i < nums.size() - 1; i++)
        {
            
            for (int j = i + 1; j < nums.size(); j++)
            {
                
                if (nums[i] + nums[j] == target)
                {
                    return {i, j};
                }
            }
        }

        return {-1, -1};
        */
