class Solution {
public:
        void Traverse(TreeNode* root,vector<int>& v){
            if(root!=NULL)
            {
                Traverse(root->left,v);
               Traverse(root->right,v);
                 v.push_back(root->val);   
             }
       }  
        
        
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> v;
            Traverse(root,v );
            
            return v;
    }
};


// iterative
class Solution {
public:
        vector<int> postorderTraversal(TreeNode* root){
             vector<int>res;
        stack<TreeNode*>s;
        while(!s.empty() || root){
            if(root){
                s.push(root->left);
                res.push_back(root->val);
                root = root->right;
            }
            else{
                root = s.top();
                s.pop();
            }
        }
        reverse(res.begin(), res.end());
                
        return res; 
    }
};
